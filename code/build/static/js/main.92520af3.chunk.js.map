{"version":3,"sources":["models/book.js","models/bookshelfItem.js","models/bookshelf.js","models/user.js","services/api.service.js","components/layout/padding/padding.component.jsx","properties.js","components/input/button/button-main/button-main.component.jsx","components/input/button/button-sec/button-sec.component.jsx","pages/menu/menu.page.jsx","components/input/button/button-icon/button-icon.component.jsx","components/header/header.component.jsx","components/input/selector/selector.component.jsx","pages/explore/explore.page.jsx","components/book-overview/book-overview.component.jsx","components/loading/loading.component.jsx","pages/explore/overview/overview.page.jsx","pages/detail/detail.page.jsx","models/dto.js","components/input/button/button-main/button-main-number/button-main-number.component.jsx","components/input/button/button-sec/button-sec-number/button-sec-number.component.jsx","pages/bookshelf/bookshelf.page.jsx","pages/bookshelf/overview/overview.page.jsx","App.js","reportWebVitals.js","index.js"],"names":["Book","title","overview","isbn","imageUrl","this","BookshelfItem","id","status","Bookshelf","content","forEach","i","push","isbn13","getRead","items","getUnread","getReading","User","name","bookshelf","handleGetBook","a","fetch","process","then","response","json","data","handleAddBook","dto","method","body","JSON","stringify","headers","handleRemoveBook","handleUpdateBook","handleGetMoods","handleGetUser","handleExplore","mood","page","books","b","PaddingComponent","basis","style","flexBasis","undefined","flexGrow","flexShrink","properties","ButtonMainComponent","iconLocation","handleOnClick","className","onClick","src","alt","ButtonSecComponent","MenuPage","props","handleExploreClick","history","handleBookshelfClick","handleOptionsClick","console","log","state","Component","ButtonIconComponent","iconUrl","HeaderComponent","installIsAvailable","handleInstallClicked","window","location","href","SelectorComponent","handleSetNext","nextIndex","selectedIndex","options","length","handleSelectionChanged","setState","handleSetPrevious","ExplorePage","handleContinueClick","selectedMood","selection","moods","BookOverview","map","LoadingComponent","ExploreOverviewPage","context","handleGetNextPage","match","params","newBooks","handleBookClicked","book","loading","rnd","Math","floor","random","DetailPage","handleRetrieveBookInfo","getButtons","handleAddToShelf","handleRemoveFromShelf","handleUpdateStatus","shelfItem","AddBookDTO","bookshelfId","RemoveBookDTO","UpdateBookDTO","ButtonMainNumberComponent","number","ButtonSecNumberComponent","BookshelfPage","handleFinishedClick","handleReadingClick","handleUnreadClick","read","reading","unread","ShelfOverviewPage","handleLoadBooks","require","config","App","toggleLoading","loadingState","isLoading","handleCreateInstallPrompt","deferredPrompt","prompt","userChoice","choiceResult","outcome","user","navigator","serviceWorker","register","addEventListener","event","preventDefault","exact","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92520af3.chunk.js","sourcesContent":["//Book info\r\nexport function Book(title, overview, isbn, imageUrl){\r\n    this.title = title;\r\n    this.overview = (overview) ? overview : \"No description found.\";\r\n    this.isbn = isbn;\r\n    this.imageUrl = imageUrl;\r\n}","export function BookshelfItem(id, isbn, status){\r\n    this.id = id;\r\n    this.isbn = isbn;\r\n    this.status = status;\r\n}","//Bookshelf\r\nimport {BookshelfItem} from \"./bookshelfItem\";\r\n\r\nexport function Bookshelf(id, content){\r\n    this.id = id;\r\n    this.content = [];\r\n    content.forEach(i => {\r\n        this.content.push(\r\n            new BookshelfItem(\r\n                i.id,\r\n                i.isbn13,\r\n                i.status\r\n            )\r\n        );\r\n    })\r\n    this.getRead = () =>{\r\n        const items = [];\r\n        this.content.forEach(i => {\r\n            if (i.status === \"READ\") {\r\n                items.push(i);\r\n            }\r\n        });\r\n        return items;\r\n    }\r\n\r\n    this.getUnread = () =>{\r\n        const items = [];\r\n        this.content.forEach(i => {\r\n            if (i.status === \"UNREAD\") {\r\n                items.push(i);\r\n            }\r\n        });\r\n        return items;\r\n    }\r\n\r\n    this.getReading = () =>{\r\n        const items = [];\r\n        this.content.forEach(i => {\r\n            if (i.status === \"READING\") {\r\n                items.push(i);\r\n            }\r\n        });\r\n        return items;\r\n    }\r\n}","import {Bookshelf} from \"./bookshelf\";\r\n\r\nexport function User(id, name, bookshelf){\r\n    this.id = id;\r\n    this.name = name;\r\n    this.bookshelf = new Bookshelf(\r\n        bookshelf.id,\r\n        bookshelf.content\r\n    );\r\n}","import {Book} from \"../models/book\";\r\nimport {Bookshelf} from \"../models/bookshelf\";\r\nimport {User} from \"../models/user\";\r\n\r\n//todo: Implement production backend\r\n/*\r\n    Api service that contains all the api calls to the backend.\r\n    The backend url and endpoints are defined in the properties file.\r\n\r\n    The retrieved data is converted to predefined models to abstract the api.\r\n */\r\n\r\nexport const handleGetBook = async (isbn) =>{\r\n    return fetch( `${process.env.REACT_APP_API_URL}/book/${isbn}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return new Book(\r\n                data.title,\r\n                data.overview,\r\n                data.isbn13,\r\n                data.imageUrl\r\n            )\r\n        });\r\n}\r\n\r\nexport const handleGetBookshelf = async (dto) =>{\r\n    return fetch(`${process.env.REACT_APP_API_URL}/bookshelf`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(dto),\r\n        headers: {\r\n            'Accept': '*/*',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            return new Bookshelf(\r\n                data.id,\r\n                data.content\r\n            )\r\n        });\r\n}\r\n\r\nexport const handleAddBook = async (dto) =>{\r\n    return fetch(`${process.env.REACT_APP_API_URL}/bookshelf`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(dto),\r\n        headers: {\r\n            'Accept': '*/*',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            return new Bookshelf(\r\n                data.id,\r\n                data.content\r\n            )\r\n        });\r\n}\r\n\r\nexport const handleRemoveBook = async (dto) =>{\r\n    return fetch(`${process.env.REACT_APP_API_URL}/bookshelf`, {\r\n        method: 'DELETE',\r\n        body: JSON.stringify(dto),\r\n        headers: {\r\n            'Accept': '*/*',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            return new Bookshelf(\r\n                data.id,\r\n                data.content\r\n            )\r\n        });\r\n}\r\n\r\nexport const handleUpdateBook = async (dto) =>{\r\n    return fetch(`${process.env.REACT_APP_API_URL}/bookshelf`, {\r\n        method: 'PATCH',\r\n        body: JSON.stringify(dto),\r\n        headers: {\r\n            'Accept': '*/*',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            return new Bookshelf(\r\n                data.id,\r\n                data.content\r\n            )\r\n        });\r\n}\r\n\r\nexport const handleGetMoods = async () =>{\r\n    return fetch(`${process.env.REACT_APP_API_URL}/mood`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return data;\r\n        });\r\n}\r\n\r\nexport const handleGetUser = async (id) =>{\r\n    return fetch(`${process.env.REACT_APP_API_URL}/user/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return new User(\r\n                data.id,\r\n                data.name,\r\n                data.bookshelf\r\n            );\r\n        });\r\n}\r\n\r\nexport const handleExplore = async (mood, page) =>{\r\n    return fetch(`${process.env.REACT_APP_API_URL}/explore/${mood}/${page}`, {\r\n        method: 'GET'\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            const books = [];\r\n            data.forEach(b => {\r\n                books.push(\r\n                    new Book(\r\n                        b.title,\r\n                        b.overview,\r\n                        b.isbn13,\r\n                        b.imageUrl\r\n                    )\r\n                )\r\n            });\r\n            return books;\r\n        })\r\n}","import React from \"react\";\r\nimport \"./padding.styles.css\";\r\n\r\n/*\r\n    Component to handle flex box padding\r\n    A basis arg can be provided to override the standard width/height\r\n    f.e. 10px\r\n */\r\nexport const PaddingComponent = ({basis}) => {\r\n    let basisChecked = (basis === undefined)? 'var(--basic-margin)' : basis;\r\n\r\n    const style = {\r\n        flexBasis: basisChecked,\r\n        flexGrow: 0,\r\n        flexShrink: 0\r\n    }\r\n    return (\r\n        <div style={style}/>\r\n    )\r\n}","export const properties ={\r\n    name: \"feeler\",\r\n\r\n    //todo: change to format username on page\r\n    textMenuGreeting: \"Hello!\",\r\n    textMenuContinue: \"What would you like to do?\",\r\n    textMenuAnswer: \"I want to...\",\r\n    textMenuBtnExplore: \"Explore new books\",\r\n    textMenuBtnBookshelf: \"Go to my bookshelf\",\r\n    textMenuBtnOtherOptions: \"View other options\",\r\n    textMenuPageName: \"Menu\",\r\n\r\n    textExploreGreeting: \"Great!\",\r\n    textExploreContinue: \"How would you like to feel?\",\r\n    textExploreAnswer: \"I want to feel...\",\r\n    textExploreBtnContinue: \"Continue\",\r\n\r\n    textShelfGreeting: \"Which bookshelf would you like to see?\",\r\n    textShelfAnswer: \"I want to see...\",\r\n    textShelfBtnRead: \"Books I've finished\",\r\n    textShelfBtnReading: \"Books I'm reading\",\r\n    textShelfBtnUnread: \"Books I want to read\"\r\n}","import React from \"react\";\r\nimport \"./button-main.styles.css\";\r\nimport \"../button.styles.css\";\r\n\r\nexport const ButtonMainComponent = ({content, iconLocation, handleOnClick}) =>{\r\n    // Main button\r\n    return(\r\n        <button className=\"text-body-sec button-main \" onClick={() => handleOnClick()}>\r\n            {content}\r\n            {/*Add icon if location is included*/}\r\n            {(iconLocation === undefined)? \"\" :\r\n                // todo: Replace with svg and set color in css file\r\n                <img src={iconLocation} alt=\"btn-icon\"/>}\r\n        </button>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./button-sec.styles.css\";\r\nimport \"../button.styles.css\";\r\n\r\nexport const ButtonSecComponent = ({content, iconLocation, handleOnClick}) =>{\r\n    // Secondary button\r\n    return(\r\n        <button className=\"text-body-sec button-sec\" onClick={() => handleOnClick()}>\r\n            {content}\r\n            {/*Add icon if location is included*/}\r\n            {(iconLocation === undefined)? \"\" :\r\n                // todo: Replace with svg and set color in css file\r\n                <img src={iconLocation} alt=\"btn-icon\"/>}\r\n        </button>\r\n    )\r\n}","import React, {Component} from \"react\";\r\nimport \"./menu.styles.css\";\r\nimport {PaddingComponent} from \"../../components/layout/padding/padding.component\";\r\nimport {properties} from \"../../properties\";\r\nimport {ButtonMainComponent} from \"../../components/input/button/button-main/button-main.component\";\r\nimport {ButtonSecComponent} from \"../../components/input/button/button-sec/button-sec.component\";\r\n\r\n/*\r\n    Menu page with redirects to project overview, newsfeed, and donation.\r\n    First page after the welcome page.\r\n */\r\n\r\nclass MenuPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    //Redirect to mood page\r\n    handleExploreClick = () => {\r\n        this.props.history.push(\"/explore\");\r\n    }\r\n\r\n    //Redirect to bookshelf\r\n    handleBookshelfClick = () => {\r\n        this.props.history.push(\"/shelf\");\r\n    }\r\n\r\n    //Open extra options\r\n    handleOptionsClick = () =>{\r\n        console.log(\"Button extra options clicked...\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"page-container\">\r\n                <div id=\"menu-container\" className=\"container-horizontal\">\r\n\r\n                    <PaddingComponent/>\r\n                    <div id=\"menu-content\" className=\"container-vertical\">\r\n\r\n                        <PaddingComponent/>\r\n                        <PaddingComponent/>\r\n\r\n                        {/*Main text*/}\r\n                        <div id=\"menu-text-container\" className=\"text-body container-vertical\">\r\n                            {properties.textMenuGreeting}\r\n                            <PaddingComponent/>\r\n                            {properties.textMenuContinue}\r\n                        </div>\r\n\r\n                        {/*User options*/}\r\n                        <div className=\"container-vertical\">\r\n\r\n                            <div className=\"text-body\">{\r\n                                properties.textMenuAnswer}\r\n                            </div>\r\n\r\n                            {/*Button with redirect to explore page*/}\r\n                            <ButtonMainComponent\r\n                                handleOnClick={this.handleExploreClick}\r\n                                content={properties.textMenuBtnExplore}\r\n                                iconLocation={\"images/icons/icon-explore.svg\"}\r\n                            />\r\n\r\n                            <PaddingComponent basis=\"10px\"/>\r\n\r\n                            {/*Button with redirect to bookshelf page*/}\r\n                            <ButtonMainComponent\r\n                                handleOnClick={this.handleBookshelfClick}\r\n                                content={properties.textMenuBtnBookshelf}\r\n                                iconLocation={\"images/icons/icon-bookshelf.svg\"}\r\n                            />\r\n\r\n                            <PaddingComponent/>\r\n\r\n                            {/*Button which opens extra options*/}\r\n                            <ButtonSecComponent\r\n                                handleOnClick={this.handleOptionsClick}\r\n                                content={properties.textMenuBtnOtherOptions}\r\n                                iconLocation={\"images/icons/icon-options.svg\"}\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    <PaddingComponent/>\r\n                </div>\r\n\r\n                <PaddingComponent/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuPage;","import React from \"react\";\r\nimport \"./button-icon.styles.css\";\r\n\r\nexport const ButtonIconComponent = ({handleOnClick, iconUrl}) => {\r\n    // Small button with only an icon\r\n    return (\r\n        <button\r\n            className=\"button-icon\"\r\n            onClick={() => handleOnClick()}\r\n        >\r\n            <img src={iconUrl} alt=\"btn-icon\"/>\r\n        </button>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./header.styles.css\";\r\nimport {PaddingComponent} from \"../layout/padding/padding.component\";\r\nimport {properties} from \"../../properties\";\r\nimport {ButtonIconComponent} from \"../input/button/button-icon/button-icon.component\";\r\n\r\nexport const HeaderComponent = ({installIsAvailable, handleInstallClicked}) =>{\r\n    return(\r\n        //Header component\r\n        <header className=\"header-container container-vertical\"\r\n        >\r\n            <PaddingComponent basis=\"10px\"/>\r\n\r\n            {/*Header content*/}\r\n            <div className=\"header-content container-horizontal\">\r\n                <PaddingComponent/>\r\n\r\n                {/*App name*/}\r\n                <div\r\n                    className=\"header-title text-title \"\r\n                    onClick={() => window.location.href = \"/\"}>\r\n                    {properties.name}\r\n                </div>\r\n\r\n                {/*Show install button if prompt is available*/}\r\n                {(installIsAvailable) ?\r\n                    <ButtonIconComponent\r\n                        handleOnClick={() => handleInstallClicked()}\r\n                        iconUrl=\"/images/icons/icon-install.svg\"/>:\"\"}\r\n\r\n\r\n                <PaddingComponent/>\r\n            </div>\r\n\r\n            <PaddingComponent basis=\"10px\"/>\r\n        </header>\r\n    )\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./selector.styles.css\";\r\nimport {PaddingComponent} from \"../../layout/padding/padding.component\";\r\nimport {ButtonIconComponent} from \"../button/button-icon/button-icon.component\";\r\n\r\nclass SelectorComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedIndex: 0\r\n        };\r\n    };\r\n\r\n    handleSetNext = () => {\r\n        //Set next index\r\n        let nextIndex = this.state.selectedIndex + 1;\r\n\r\n        //Set to start of array if there is no next object\r\n        if (this.state.selectedIndex === this.props.options.length - 1) {\r\n            nextIndex = 0;\r\n        }\r\n\r\n        //Set new state\r\n        this.props.handleSelectionChanged(this.props.options[nextIndex]);\r\n        this.setState({selectedIndex: nextIndex});\r\n    }\r\n\r\n    handleSetPrevious = () => {\r\n        //Set next index\r\n        let nextIndex = this.state.selectedIndex - 1;\r\n\r\n        //Set to end of array if first object is currently selected\r\n        if (this.state.selectedIndex === 0) {\r\n            nextIndex = this.props.options.length - 1;\r\n        }\r\n\r\n        //Set new state\r\n        this.props.handleSelectionChanged(this.props.options[nextIndex]);\r\n        this.setState({selectedIndex: nextIndex});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"selector-container container-vertical\">\r\n                <div className=\"selector-content-container container-horizontal\">\r\n                    {/*Button prev*/}\r\n                    <ButtonIconComponent\r\n                        handleOnClick={this.handleSetPrevious}\r\n                        iconUrl=\"images/icons/icon-previous.svg\"\r\n                    />\r\n\r\n                    <PaddingComponent basis=\"10px\"/>\r\n\r\n                    {/*Current option*/}\r\n                    <div className=\"selector-content container-horizontal text-title\">\r\n                        {this.props.options[this.state.selectedIndex]}\r\n                    </div>\r\n\r\n                    <PaddingComponent/>\r\n                    {/*Button next*/}\r\n                    <ButtonIconComponent\r\n                        handleOnClick={this.handleSetNext}\r\n                        iconUrl=\"images/icons/icon-next.svg\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SelectorComponent;","import React, {Component} from 'react';\r\nimport \"./explore.styles.css\";\r\nimport {PaddingComponent} from \"../../components/layout/padding/padding.component\";\r\nimport {properties} from \"../../properties\";\r\nimport SelectorComponent from \"../../components/input/selector/selector.component\";\r\nimport {ButtonMainComponent} from \"../../components/input/button/button-main/button-main.component\";\r\n\r\nclass ExplorePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedMood: this.props.moods[0]\r\n        };\r\n    };\r\n\r\n    handleContinueClick = () =>{\r\n        this.props.history.push(`/explore/overview/${this.state.selectedMood}`);\r\n    }\r\n\r\n    handleSelectionChanged = (selection) =>{\r\n        this.setState({selectedMood: selection}, () =>{\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"page-container\">\r\n                <div id=\"explore-container\" className=\"container-horizontal\">\r\n                    <PaddingComponent/>\r\n                    <div id=\"explore-content\" className=\"container-vertical\">\r\n\r\n                        <PaddingComponent/>\r\n                        <PaddingComponent/>\r\n\r\n                        {/*Main text*/}\r\n                        <div id=\"explore-text-container\" className=\"text-body container-vertical\">\r\n                            {properties.textExploreGreeting}\r\n                            <PaddingComponent/>\r\n                            {properties.textExploreContinue}\r\n                        </div>\r\n\r\n                        {/*User options*/}\r\n                        <div className=\"container-vertical\">\r\n                            <div className=\"text-body\">\r\n                                {properties.textExploreAnswer}\r\n                            </div>\r\n                            <PaddingComponent basis=\"10px\"/>\r\n                            <SelectorComponent\r\n                                options={this.props.moods}\r\n                                handleSelectionChanged={this.handleSelectionChanged}\r\n                            />\r\n                            <PaddingComponent basis=\"5px\"/>\r\n                            <ButtonMainComponent\r\n                                handleOnClick={this.handleContinueClick}\r\n                                content={properties.textExploreBtnContinue}\r\n                            />\r\n                        </div>\r\n\r\n                        <PaddingComponent/>\r\n                    </div>\r\n                    <PaddingComponent/>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExplorePage;","import React from \"react\";\r\nimport \"./book-overview.styles.css\";\r\n\r\nexport const BookOverview = ({books, handleOnClick}) => {\r\n\r\n    return (\r\n        <div className=\"book-overview-container\">\r\n            {books.map((b, i) => {\r\n                return <div\r\n                    onClick={() => handleOnClick(b)}\r\n                    key={i}\r\n                >\r\n                    <img src={b.imageUrl} alt={b.title}/>\r\n                </div>\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./loading.styles.css\";\r\n\r\nexport const LoadingComponent = () =>{\r\n    return(\r\n        <div className=\"loading-container\">\r\n            <div className=\"lds-ring\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {Component} from \"react\";\r\nimport \"./overview.styles.css\";\r\nimport {handleExplore} from \"../../../services/api.service\";\r\nimport {BookOverview} from \"../../../components/book-overview/book-overview.component\";\r\nimport {ButtonMainComponent} from \"../../../components/input/button/button-main/button-main.component\";\r\nimport {PaddingComponent} from \"../../../components/layout/padding/padding.component\";\r\nimport {LoadingComponent} from \"../../../components/loading/loading.component\";\r\n\r\nclass ExploreOverviewPage extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            page: 0,\r\n            books: [],\r\n            loading: true\r\n        };\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const rnd = Math.floor(Math.random() * 150) + 1\r\n        await this.setState({page: rnd})\r\n\r\n        await this.handleGetNextPage();\r\n        this.setState({loading: false})\r\n    }\r\n\r\n    handleGetNextPage = async () => {\r\n        const page = this.state.page + 1;\r\n\r\n        const newBooks = await handleExplore(this.props.match.params.mood, page);\r\n\r\n        const books = [...this.state.books];\r\n        books.push(...newBooks);\r\n\r\n        this.setState({\r\n            books: books,\r\n            page: page\r\n        });\r\n    }\r\n\r\n    handleBookClicked = (book) =>{\r\n        this.props.history.push(`/detail/${book.isbn}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"page-container\">\r\n                {(this.state.loading)?\r\n                <LoadingComponent/>:\r\n                <div className=\"container-vertical\">\r\n                    <BookOverview\r\n                    books={this.state.books}\r\n                    handleOnClick={this.handleBookClicked}\r\n                    />\r\n\r\n                    {/*Load button*/}\r\n                    {this.state.books.length > 0 ?\r\n                        <div className=\"container-horizontal\">\r\n                            <PaddingComponent/>\r\n                            <div className=\"container-vertical\">\r\n                                <PaddingComponent basis=\"10px\"/>\r\n                                <ButtonMainComponent\r\n                                    content=\"Load more...\"\r\n                                    handleOnClick={this.handleGetNextPage}\r\n                                />\r\n                                <PaddingComponent basis=\"10px\"/>\r\n                            </div>\r\n                            <PaddingComponent/>\r\n                        </div>:\r\n                        \"\"}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExploreOverviewPage;","import React, {Component} from \"react\";\r\nimport \"./detail.styles.css\";\r\nimport {handleGetBook} from \"../../services/api.service\";\r\nimport {PaddingComponent} from \"../../components/layout/padding/padding.component\";\r\nimport {LoadingComponent} from \"../../components/loading/loading.component\";\r\nimport {ButtonMainComponent} from \"../../components/input/button/button-main/button-main.component\";\r\nimport {ButtonSecComponent} from \"../../components/input/button/button-sec/button-sec.component\";\r\n\r\nclass DetailPage extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            book: null\r\n        };\r\n    };\r\n\r\n    async componentDidMount() {\r\n        await this.handleRetrieveBookInfo();\r\n    }\r\n\r\n    handleRetrieveBookInfo = async () => {\r\n        const isbn = this.props.match.params.isbn;\r\n        const book = await handleGetBook(isbn);\r\n        this.setState({book: book})\r\n    }\r\n\r\n    getButtons = () => {\r\n        const {book} = this.state;\r\n\r\n        const {\r\n            bookshelf,\r\n            handleAddToShelf,\r\n            handleRemoveFromShelf,\r\n            handleUpdateStatus\r\n\r\n        } = this.props;\r\n\r\n        //Get item from shelf if it exists\r\n        let shelfItem = null;\r\n        bookshelf.content.forEach(i => {\r\n            if (i.isbn === book.isbn) {\r\n                shelfItem = i;\r\n            }\r\n        });\r\n\r\n        if (shelfItem) {\r\n            //Book is present on shelf\r\n            switch (shelfItem.status) {\r\n                //Finished the book\r\n                case \"READ\":\r\n                    return <ButtonSecComponent\r\n                        handleOnClick={() => handleRemoveFromShelf(book)}\r\n                        content=\"Remove from bookshelf\"\r\n                        iconLocation={\"/images/icons/icon-remove.svg\"}\r\n                    />\r\n                    //Currently reading the book\r\n                case \"READING\":\r\n                    return <div className=\"container-vertical\">\r\n                        <ButtonMainComponent\r\n                            handleOnClick={() => handleUpdateStatus(book, 'READ')}\r\n                            content=\"Finish reading\"\r\n                            iconLocation={\"/images/icons/icon-finish.svg\"}\r\n                        />\r\n                        <PaddingComponent basis=\"10px\"/>\r\n                        <ButtonSecComponent\r\n                            handleOnClick={() => handleUpdateStatus(book, 'UNREAD')}\r\n                            content=\"Stop reading\"\r\n                            iconLocation={\"/images/icons/icon-stop-reading.svg\"}\r\n                        />\r\n                            <PaddingComponent basis=\"10px\"/>\r\n                        <ButtonSecComponent\r\n                            handleOnClick={() => handleRemoveFromShelf(book)}\r\n                            content=\"Remove from bookshelf\"\r\n                            iconLocation={\"/images/icons/icon-remove.svg\"}\r\n                        />\r\n                    </div>\r\n                //Not yet reading the book\r\n                case \"UNREAD\":\r\n                default:\r\n                    return <div className=\"container-vertical\">\r\n                        <ButtonMainComponent\r\n                            handleOnClick={() => handleUpdateStatus(book, 'READING')}\r\n                            content=\"Start reading\"\r\n                            iconLocation={\"/images/icons/icon-start-reading.svg\"}\r\n                        />\r\n                        <PaddingComponent basis=\"10px\"/>\r\n                        <ButtonSecComponent\r\n                            handleOnClick={() => handleRemoveFromShelf(book)}\r\n                            content=\"Remove from bookshelf\"\r\n                            iconLocation={\"/images/icons/icon-remove.svg\"}\r\n                        />\r\n                    </div>\r\n            }\r\n        }\r\n        //Book not present on shelf\r\n        else{\r\n            return <ButtonMainComponent\r\n                handleOnClick={() => handleAddToShelf(book)}\r\n                content=\"Add to bookshelf\"\r\n                iconLocation={\"/images/icons/icon-add.svg\"}\r\n            />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {book} = this.state;\r\n\r\n        return (\r\n            <div id=\"page-container\">\r\n                {(book) ?\r\n                    <div className=\"detail-container container-vertical\">\r\n                        <img src={book.imageUrl} alt={book.title}/>\r\n\r\n                        <div className=\"container-horizontal\">\r\n                            <PaddingComponent/>\r\n                            <div className=\"container-vertical\">\r\n                                <PaddingComponent/>\r\n                                {\r\n                                    this.getButtons()\r\n                                }\r\n                                <PaddingComponent/>\r\n                                <div className=\"text-body\">\r\n                                    {book.title}\r\n                                </div>\r\n                                <PaddingComponent/>\r\n                                <div className=\"text-body-sec\">\r\n                                    {book.overview}\r\n                                </div>\r\n                                <PaddingComponent/>\r\n                            </div>\r\n                            <PaddingComponent/>\r\n                        </div>\r\n                    </div> :\r\n                    <LoadingComponent/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailPage;","export function AddBookDTO(bookshelfId, isbn){\r\n    this.bookshelfId = bookshelfId;\r\n    this.isbn13 = isbn;\r\n}\r\n\r\nexport function GetBookshelfDTO(bookshelfId){\r\n    this.bookshelfId = bookshelfId;\r\n}\r\n\r\nexport function RemoveBookDTO(bookshelfId, isbn){\r\n    this.bookshelfId = bookshelfId;\r\n    this.isbn13 = isbn;\r\n}\r\n\r\nexport function UpdateBookDTO(bookshelfId, isbn, status){\r\n    this.bookshelfId = bookshelfId;\r\n    this.isbn13 = isbn;\r\n    this.status = status;\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./button-main-number.styles.css\";\r\nimport \"../../button.styles.css\";\r\n\r\nexport const ButtonMainNumberComponent = ({content, number = 0, handleOnClick}) =>{\r\n    // Main button\r\n    return(\r\n        <button className=\"text-body-sec button-main \" onClick={() => handleOnClick()}>\r\n            {content}\r\n            <div>{number}</div>\r\n        </button>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./button-sec-number.styles.css\";\r\nimport \"../../button.styles.css\";\r\n\r\nexport const ButtonSecNumberComponent = ({content, number, handleOnClick}) =>{\r\n    // Secondary button\r\n    return(\r\n        <button className=\"text-body-sec button-sec\" onClick={() => handleOnClick()}>\r\n            {content}\r\n            <div>{number}</div>\r\n        </button>\r\n    )\r\n}","import React, {Component} from \"react\";\r\nimport \"./bookshelf.styles.css\";\r\nimport {PaddingComponent} from \"../../components/layout/padding/padding.component\";\r\nimport {properties} from \"../../properties\";\r\nimport {ButtonMainNumberComponent} from \"../../components/input/button/button-main/button-main-number/button-main-number.component\";\r\nimport {ButtonSecNumberComponent} from \"../../components/input/button/button-sec/button-sec-number/button-sec-number.component\";\r\n\r\nclass BookshelfPage extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {};\r\n    };\r\n\r\n    //redirect to finished books\r\n    handleFinishedClick = () => {\r\n        this.props.history.push(\"/shelf/read\");\r\n    }\r\n\r\n    //Redirect to currently reading\r\n    handleReadingClick = () => {\r\n        this.props.history.push(\"/shelf/reading\");\r\n    }\r\n\r\n    //Redirect to unread\r\n    handleUnreadClick = () => {\r\n        this.props.history.push(\"/shelf/unread\");\r\n    }\r\n\r\n    render() {\r\n        const {bookshelf} = this.props;\r\n\r\n        const read = [];\r\n        const reading = [];\r\n        const unread = [];\r\n\r\n        bookshelf.content.forEach(i => {\r\n            switch (i.status) {\r\n                case \"READ\":\r\n                    read.push(i);\r\n                    return;\r\n                case \"READING\":\r\n                    reading.push(i);\r\n                    return;\r\n                case \"UNREAD\":\r\n                default:\r\n                    unread.push(i);\r\n                    break;\r\n            }\r\n        })\r\n\r\n        return (\r\n            <div id=\"page-container\">\r\n                <div id=\"shelf-container\" className=\"container-horizontal\">\r\n\r\n                    <PaddingComponent/>\r\n                    <div id=\"shelf-content\" className=\"container-vertical\">\r\n\r\n                        <PaddingComponent/>\r\n                        <PaddingComponent/>\r\n\r\n                        {/*Main text*/}\r\n                        <div id=\"shelf-text-container\" className=\"text-body container-vertical\">\r\n                            {properties.textShelfGreeting}\r\n                        </div>\r\n\r\n                        {/*User options*/}\r\n                        <div className=\"container-vertical\">\r\n\r\n                            <div className=\"text-body\">{\r\n                                properties.textShelfAnswer}\r\n                            </div>\r\n\r\n                            {/*Button with redirect to read page*/}\r\n                            <ButtonMainNumberComponent\r\n                                handleOnClick={this.handleFinishedClick}\r\n                                content={properties.textShelfBtnRead}\r\n                                number={read.length}\r\n                            />\r\n\r\n                            <PaddingComponent basis=\"10px\"/>\r\n\r\n                            {/*Button with redirect to reading page*/}\r\n                            <ButtonMainNumberComponent\r\n                                handleOnClick={this.handleReadingClick}\r\n                                content={properties.textShelfBtnReading}\r\n                                number={reading.length}\r\n                            />\r\n\r\n                            <PaddingComponent/>\r\n\r\n                            {/*Button with redirect to unread page*/}\r\n                            <ButtonSecNumberComponent\r\n                                handleOnClick={this.handleUnreadClick}\r\n                                content={properties.textShelfBtnUnread}\r\n                                number={unread.length}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <PaddingComponent/>\r\n                </div>\r\n\r\n                <PaddingComponent/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookshelfPage;","import React, {Component} from \"react\";\r\nimport \"./overview.styles.css\";\r\nimport {handleGetBook} from \"../../../services/api.service\";\r\nimport {LoadingComponent} from \"../../../components/loading/loading.component\";\r\nimport {BookOverview} from \"../../../components/book-overview/book-overview.component\";\r\n\r\nclass ShelfOverviewPage extends Component{\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            books: [],\r\n            loading: true\r\n        };\r\n    };\r\n\r\n    async componentDidMount() {\r\n        await this.handleLoadBooks();\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    handleLoadBooks = async () =>{\r\n        const {items} = this.props;\r\n        const books = [];\r\n\r\n        //Get Book data for all shelf items\r\n        for(const i of items){\r\n            await handleGetBook(i.isbn)\r\n                .then(b => books.push(b));\r\n        }\r\n\r\n        this.setState({books: books});\r\n    }\r\n\r\n    handleBookClicked = (book) =>{\r\n        this.props.history.push(`/detail/${book.isbn}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"page-container\">\r\n                {(this.state.loading)?\r\n                    <LoadingComponent/>:\r\n                    <div className=\"container-vertical\">\r\n                        <BookOverview\r\n                            books={this.state.books}\r\n                            handleOnClick={this.handleBookClicked}\r\n                        />\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShelfOverviewPage;","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport './App.css';\r\nimport {handleAddBook, handleGetMoods, handleGetUser, handleRemoveBook, handleUpdateBook} from \"./services/api.service\";\r\nimport MenuPage from \"./pages/menu/menu.page\";\r\nimport {HeaderComponent} from \"./components/header/header.component\";\r\nimport ExplorePage from \"./pages/explore/explore.page\";\r\nimport ExploreOverviewPage from \"./pages/explore/overview/overview.page\";\r\nimport DetailPage from \"./pages/detail/detail.page\";\r\nimport {LoadingComponent} from \"./components/loading/loading.component\";\r\nimport {AddBookDTO, RemoveBookDTO, UpdateBookDTO} from \"./models/dto\";\r\nimport BookshelfPage from \"./pages/bookshelf/bookshelf.page\";\r\nimport ReadOverviewPage from \"./pages/bookshelf/overview/overview.page\";\r\nrequire('dotenv').config();\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            deferredPrompt: null, //Install prompt filled once supplied\r\n\r\n            isLoading: true,\r\n            moods: undefined,\r\n            user: undefined,\r\n        };\r\n    };\r\n\r\n    toggleLoading = (loadingState) => {\r\n        this.setState({isLoading: loadingState});\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log(\"backend target\", process.env.REACT_APP_API_URL);\r\n        this.toggleLoading(true);\r\n\r\n        //Setup the service worker if possible\r\n        if ('serviceWorker' in navigator) {\r\n            await navigator.serviceWorker\r\n                .register(\"/serviceWorker.js\");\r\n        }\r\n\r\n        /*\r\n            Add an event listener to catch the install prompt.\r\n             Once caught, prevent the popup and set the state, which enables the download button in the header.\r\n            This usually takes a few seconds to appear.\r\n        */\r\n        window.addEventListener(\"beforeinstallprompt\", (event) => {\r\n            console.log(\"beforeinstallprompt fired and caught\", event);\r\n            event.preventDefault();\r\n            this.setState({deferredPrompt: event});\r\n            return false;\r\n        })\r\n\r\n        try {\r\n            const user = await handleGetUser(1);\r\n            console.log(\"Retrieved user\", user);\r\n            const moods = await handleGetMoods();\r\n            console.log(\"Retrieved moods\", moods);\r\n\r\n            console.log(\"Current bookshelf: \", user.bookshelf.content)\r\n\r\n            this.setState({\r\n                user: user,\r\n                moods: moods\r\n            });\r\n        } finally {\r\n            this.toggleLoading(false);\r\n        }\r\n    }\r\n\r\n    /*\r\n    Create the install prompt after it has been caught.\r\n    Function is passed into the header and called when install button is pressed.\r\n    If no prompt is available nothing happens.\r\n */\r\n    handleCreateInstallPrompt = () => {\r\n        let {deferredPrompt} = this.state;\r\n\r\n        if (deferredPrompt) {\r\n            deferredPrompt.prompt();\r\n\r\n            deferredPrompt.userChoice.then((choiceResult) => {\r\n                if (choiceResult.outcome === 'dismissed') {\r\n                    console.log('User cancelled installation');\r\n                } else {\r\n                    console.log('User added to homescreen');\r\n                }\r\n            })\r\n        } else {\r\n            console.log(\"No prompt available\");\r\n        }\r\n\r\n        //clear deferredPrompt\r\n        this.setState({deferredPrompt: null})\r\n    }\r\n\r\n    handleAddToShelf = (book) => {\r\n        handleAddBook(new AddBookDTO(\r\n            this.state.user.bookshelf.id,\r\n            book.isbn\r\n        )).then(bookshelf => {\r\n            let {user} = this.state;\r\n            user.bookshelf = bookshelf;\r\n            this.setState({user: user})\r\n        });\r\n    }\r\n\r\n    handleRemoveFromShelf = (book) => {\r\n        handleRemoveBook(new RemoveBookDTO(\r\n            this.state.user.bookshelf.id,\r\n            book.isbn\r\n        )).then(bookshelf => {\r\n            let {user} = this.state;\r\n            user.bookshelf = bookshelf;\r\n            this.setState({user: user})\r\n        });\r\n    }\r\n\r\n    handleUpdateStatus = (book, status) => {\r\n        handleUpdateBook(new UpdateBookDTO(\r\n            this.state.user.bookshelf.id,\r\n            book.isbn,\r\n            status\r\n        )).then(bookshelf => {\r\n            let {user} = this.state;\r\n            user.bookshelf = bookshelf;\r\n            this.setState({user: user})\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"App\">\r\n                    {/*Display the loading page if loading state is active*/}\r\n                    {(this.state.isLoading) ?\r\n                        <LoadingComponent/>\r\n                        :\r\n                        // Content of the application\r\n                        <div id=\"main-container\" className=\"container-vertical\">\r\n                            {/*Global header*/}\r\n                            <HeaderComponent\r\n                                installIsAvailable={(this.state.deferredPrompt)}\r\n                                handleInstallClicked={this.handleCreateInstallPrompt}\r\n                            />\r\n\r\n                            {/*Switch to handle routing*/}\r\n                            <Switch>\r\n\r\n                                {/*Menu page*/}\r\n                                <Route exact path=\"/\" component={MenuPage}/>\r\n\r\n                                {/*Explore page*/}\r\n                                <Route exact path=\"/explore\" render={(props) => <ExplorePage\r\n                                    moods={this.state.moods}\r\n                                    {...props}/>}/>\r\n\r\n                                {/*Explore overview page*/}\r\n                                <Route path=\"/explore/overview/:mood\" render={(props) => <ExploreOverviewPage\r\n                                    {...props}/>}/>\r\n\r\n                                {/*Books detail page*/}\r\n                                <Route path=\"/detail/:isbn\" render={(props) => <DetailPage\r\n                                    bookshelf={this.state.user.bookshelf}\r\n                                    handleAddToShelf={this.handleAddToShelf}\r\n                                    handleRemoveFromShelf={this.handleRemoveFromShelf}\r\n                                    handleUpdateStatus={this.handleUpdateStatus}\r\n                                    {...props}/>}/>\r\n\r\n                                {/*Bookshelf menu page*/}\r\n                                <Route exact path=\"/shelf\" render={(props) => <BookshelfPage\r\n                                    bookshelf={this.state.user.bookshelf}\r\n                                    {...props}/>}/>\r\n\r\n                                {/*Bookshelf overviews*/}\r\n                                <Route exact path=\"/shelf/read\" render={(props) => <ReadOverviewPage\r\n                                    items={this.state.user.bookshelf.getRead()}\r\n                                    {...props}/>}/>\r\n\r\n                                <Route exact path=\"/shelf/reading\" render={(props) => <ReadOverviewPage\r\n                                    items={this.state.user.bookshelf.getReading()}\r\n                                    {...props}/>}/>\r\n\r\n                                <Route exact path=\"/shelf/unread\" render={(props) => <ReadOverviewPage\r\n                                    items={this.state.user.bookshelf.getUnread()}\r\n                                    {...props}/>}/>\r\n                            </Switch>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Router>\r\n        );\r\n    };\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}